name: Test

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: 'main'

      # - name: Setup Flutter
      #   uses: subosito/flutter-action@v1
      #   with:
      #     flutter-version: '3.3.4'

      # - name: Start iOS Simulator
      #   run: |
      #     xcrun xctrace list devices
      #     UDID=$(xcrun xctrace list devices | grep "^iPhone 14 Simulator (16.2) (" | awk '{gsub(/[()]/,""); print $NF}')
      #     echo $UDID
      #     xcrun simctl boot "${UDID:?No Simulator with this name found}"
      
      # - name: Load TIKI Credentials    
      #   env:
      #     TIKI_CREDENTIALS: ${{ secrets.TIKI_CREDENTIALS }}
      #   run: |
      #     echo "$TIKI_CREDENTIALS" >> integration_test/tiki_credentials.dart

      # - name: Run iOS Integration Tests
      #   run: flutter test integration_test/tiki_sdk_flutter_test.dart

      # - name: Run iOS TikiSdkPlatform Integration Tests
      #   run: flutter test integration_test/tiki_sdk_flutter_platform_test.dart

      # - name: 'Test Publish SDK'
      #   run: |
      #     flutter pub publish --dry-run
      
      # - name: Git version
      #   id: version
      #   uses: codacy/git-version@2.7.1
      #   with:
      #     release-branch: "main"

      - name: Get Versions
        id: get_versions
        run: |
          export PUBSPEC_VERSION=$(grep version pubspec.yaml |  awk -F  ': ' '/1/ {print $2}')
          echo "PUBSPEC_VERSION=$PUBSPEC_VERSION"
          echo "{PUBSPEC_VERSION}={$PUBSPEC_VERSION}" >> $GITHUB_OUTPUT
          export TAG_VERSION=$(echo ${{ steps.version.outputs.version }} | awk -F '-' '/1/ {print $1}')
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "{TAG_VERSION}={$TAG_VERSION}" >> $GITHUB_OUTPUT

      - name: Check Release version
        if:  ${{ steps.get_versions.outputs.TAG_VERSION }} != ${{ steps.get_versions.outputs.PUBSPEC_VERSION }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('git-version and pubspec version are different!')
      